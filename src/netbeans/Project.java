package generador.de.modelos;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name="project"
    ,catalog="metaserver2"
)
public class Project  implements java.io.Serializable {


     private Integer id;
     private String name;
     private String description;
     private Float percentage;
     private Set<AnnotatedDocument> annotatedDocuments = new HashSet<AnnotatedDocument>(0);
     private Set<Document> documents = new HashSet<Document>(0);
     private Set<ProjectConsensus> projectConsensuses = new HashSet<ProjectConsensus>(0);
     private Set<ProjectsServersTypesDocuments> projectsServersTypesDocumentses = new HashSet<ProjectsServersTypesDocuments>(0);
     private Set<User> users = new HashSet<User>(0);

    public Project() {
    }

    public Project(String name, String description, Float percentage, Set<AnnotatedDocument> annotatedDocuments, Set<Document> documents, Set<ProjectConsensus> projectConsensuses, Set<ProjectsServersTypesDocuments> projectsServersTypesDocumentses, Set<User> users) {
       this.name = name;
       this.description = description;
       this.percentage = percentage;
       this.annotatedDocuments = annotatedDocuments;
       this.documents = documents;
       this.projectConsensuses = projectConsensuses;
       this.projectsServersTypesDocumentses = projectsServersTypesDocumentses;
       this.users = users;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="name", length=500)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="description", length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="percentage", precision=12, scale=0)
    public Float getPercentage() {
        return this.percentage;
    }
    
    public void setPercentage(Float percentage) {
        this.percentage = percentage;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="project")
    public Set<AnnotatedDocument> getAnnotatedDocuments() {
        return this.annotatedDocuments;
    }
    
    public void setAnnotatedDocuments(Set<AnnotatedDocument> annotatedDocuments) {
        this.annotatedDocuments = annotatedDocuments;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="project_document", catalog="metaserver2", joinColumns = { 
        @JoinColumn(name="project_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="document_id", nullable=false, updatable=false) })
    public Set<Document> getDocuments() {
        return this.documents;
    }
    
    public void setDocuments(Set<Document> documents) {
        this.documents = documents;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="project")
    public Set<ProjectConsensus> getProjectConsensuses() {
        return this.projectConsensuses;
    }
    
    public void setProjectConsensuses(Set<ProjectConsensus> projectConsensuses) {
        this.projectConsensuses = projectConsensuses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="project")
    public Set<ProjectsServersTypesDocuments> getProjectsServersTypesDocumentses() {
        return this.projectsServersTypesDocumentses;
    }
    
    public void setProjectsServersTypesDocumentses(Set<ProjectsServersTypesDocuments> projectsServersTypesDocumentses) {
        this.projectsServersTypesDocumentses = projectsServersTypesDocumentses;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="user_project", catalog="metaserver2", joinColumns = { 
        @JoinColumn(name="project_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="user_id", nullable=false, updatable=false) })
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }




}


