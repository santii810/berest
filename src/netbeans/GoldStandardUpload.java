package generador.de.modelos;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * GoldStandardUpload generated by hbm2java
 */
@Entity
@Table(name="gold_standard_upload"
    ,catalog="metaserver2"
)
public class GoldStandardUpload  implements java.io.Serializable {


     private Integer id;
     private Competition competition;
     private User user;
     private Date created;
     private byte[] file;
     private String extension;
     private int size;
     private String name;
     private boolean isPublic;
     private boolean isDownloadable;
     private Set<PredictionEvaluation> predictionEvaluations = new HashSet<PredictionEvaluation>(0);
     private Set<CoOcurrenceNetwork> coOcurrenceNetworks = new HashSet<CoOcurrenceNetwork>(0);
     private Set<GoldAnnotation> goldAnnotations = new HashSet<GoldAnnotation>(0);
     private Set<PrivatePredictionEvaluation> privatePredictionEvaluations = new HashSet<PrivatePredictionEvaluation>(0);
     private Set<CompetitionBenchmark> competitionBenchmarks = new HashSet<CompetitionBenchmark>(0);

    public GoldStandardUpload() {
    }

	
    public GoldStandardUpload(Competition competition, User user, Date created, byte[] file, String extension, int size, String name, boolean isPublic, boolean isDownloadable) {
        this.competition = competition;
        this.user = user;
        this.created = created;
        this.file = file;
        this.extension = extension;
        this.size = size;
        this.name = name;
        this.isPublic = isPublic;
        this.isDownloadable = isDownloadable;
    }
    public GoldStandardUpload(Competition competition, User user, Date created, byte[] file, String extension, int size, String name, boolean isPublic, boolean isDownloadable, Set<PredictionEvaluation> predictionEvaluations, Set<CoOcurrenceNetwork> coOcurrenceNetworks, Set<GoldAnnotation> goldAnnotations, Set<PrivatePredictionEvaluation> privatePredictionEvaluations, Set<CompetitionBenchmark> competitionBenchmarks) {
       this.competition = competition;
       this.user = user;
       this.created = created;
       this.file = file;
       this.extension = extension;
       this.size = size;
       this.name = name;
       this.isPublic = isPublic;
       this.isDownloadable = isDownloadable;
       this.predictionEvaluations = predictionEvaluations;
       this.coOcurrenceNetworks = coOcurrenceNetworks;
       this.goldAnnotations = goldAnnotations;
       this.privatePredictionEvaluations = privatePredictionEvaluations;
       this.competitionBenchmarks = competitionBenchmarks;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="competition_id", nullable=false)
    public Competition getCompetition() {
        return this.competition;
    }
    
    public void setCompetition(Competition competition) {
        this.competition = competition;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", nullable=false, length=19)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }

    
    @Column(name="file", nullable=false)
    public byte[] getFile() {
        return this.file;
    }
    
    public void setFile(byte[] file) {
        this.file = file;
    }

    
    @Column(name="extension", nullable=false, length=10)
    public String getExtension() {
        return this.extension;
    }
    
    public void setExtension(String extension) {
        this.extension = extension;
    }

    
    @Column(name="size", nullable=false)
    public int getSize() {
        return this.size;
    }
    
    public void setSize(int size) {
        this.size = size;
    }

    
    @Column(name="name", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="is_public", nullable=false)
    public boolean isIsPublic() {
        return this.isPublic;
    }
    
    public void setIsPublic(boolean isPublic) {
        this.isPublic = isPublic;
    }

    
    @Column(name="is_downloadable", nullable=false)
    public boolean isIsDownloadable() {
        return this.isDownloadable;
    }
    
    public void setIsDownloadable(boolean isDownloadable) {
        this.isDownloadable = isDownloadable;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="goldStandardUpload")
    public Set<PredictionEvaluation> getPredictionEvaluations() {
        return this.predictionEvaluations;
    }
    
    public void setPredictionEvaluations(Set<PredictionEvaluation> predictionEvaluations) {
        this.predictionEvaluations = predictionEvaluations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="goldStandardUpload")
    public Set<CoOcurrenceNetwork> getCoOcurrenceNetworks() {
        return this.coOcurrenceNetworks;
    }
    
    public void setCoOcurrenceNetworks(Set<CoOcurrenceNetwork> coOcurrenceNetworks) {
        this.coOcurrenceNetworks = coOcurrenceNetworks;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="goldStandardUpload")
    public Set<GoldAnnotation> getGoldAnnotations() {
        return this.goldAnnotations;
    }
    
    public void setGoldAnnotations(Set<GoldAnnotation> goldAnnotations) {
        this.goldAnnotations = goldAnnotations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="goldStandardUpload")
    public Set<PrivatePredictionEvaluation> getPrivatePredictionEvaluations() {
        return this.privatePredictionEvaluations;
    }
    
    public void setPrivatePredictionEvaluations(Set<PrivatePredictionEvaluation> privatePredictionEvaluations) {
        this.privatePredictionEvaluations = privatePredictionEvaluations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="goldStandardUpload")
    public Set<CompetitionBenchmark> getCompetitionBenchmarks() {
        return this.competitionBenchmarks;
    }
    
    public void setCompetitionBenchmarks(Set<CompetitionBenchmark> competitionBenchmarks) {
        this.competitionBenchmarks = competitionBenchmarks;
    }




}


