package generador.de.modelos;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PredictionUpload generated by hbm2java
 */
@Entity
@Table(name="prediction_upload"
    ,catalog="metaserver2"
)
public class PredictionUpload  implements java.io.Serializable {


     private Integer id;
     private Competition competition;
     private User user;
     private Date created;
     private byte[] file;
     private String extension;
     private int size;
     private String name;
     private Boolean isFinalSubmission;
     private Boolean isLoaded;
     private Boolean isHidden;
     private Set<PrivatePredictionEvaluation> privatePredictionEvaluations = new HashSet<PrivatePredictionEvaluation>(0);
     private Set<CompetitionParticipant> competitionParticipants = new HashSet<CompetitionParticipant>(0);
     private Set<PrivatePrediction> privatePredictions = new HashSet<PrivatePrediction>(0);

    public PredictionUpload() {
    }

	
    public PredictionUpload(Competition competition, User user, byte[] file, String extension, int size, String name) {
        this.competition = competition;
        this.user = user;
        this.file = file;
        this.extension = extension;
        this.size = size;
        this.name = name;
    }
    public PredictionUpload(Competition competition, User user, Date created, byte[] file, String extension, int size, String name, Boolean isFinalSubmission, Boolean isLoaded, Boolean isHidden, Set<PrivatePredictionEvaluation> privatePredictionEvaluations, Set<CompetitionParticipant> competitionParticipants, Set<PrivatePrediction> privatePredictions) {
       this.competition = competition;
       this.user = user;
       this.created = created;
       this.file = file;
       this.extension = extension;
       this.size = size;
       this.name = name;
       this.isFinalSubmission = isFinalSubmission;
       this.isLoaded = isLoaded;
       this.isHidden = isHidden;
       this.privatePredictionEvaluations = privatePredictionEvaluations;
       this.competitionParticipants = competitionParticipants;
       this.privatePredictions = privatePredictions;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="competition_id", nullable=false)
    public Competition getCompetition() {
        return this.competition;
    }
    
    public void setCompetition(Competition competition) {
        this.competition = competition;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", length=19)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }

    
    @Column(name="file", nullable=false)
    public byte[] getFile() {
        return this.file;
    }
    
    public void setFile(byte[] file) {
        this.file = file;
    }

    
    @Column(name="extension", nullable=false, length=10)
    public String getExtension() {
        return this.extension;
    }
    
    public void setExtension(String extension) {
        this.extension = extension;
    }

    
    @Column(name="size", nullable=false)
    public int getSize() {
        return this.size;
    }
    
    public void setSize(int size) {
        this.size = size;
    }

    
    @Column(name="name", nullable=false, length=65535)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="is_final_submission")
    public Boolean getIsFinalSubmission() {
        return this.isFinalSubmission;
    }
    
    public void setIsFinalSubmission(Boolean isFinalSubmission) {
        this.isFinalSubmission = isFinalSubmission;
    }

    
    @Column(name="is_loaded")
    public Boolean getIsLoaded() {
        return this.isLoaded;
    }
    
    public void setIsLoaded(Boolean isLoaded) {
        this.isLoaded = isLoaded;
    }

    
    @Column(name="is_hidden")
    public Boolean getIsHidden() {
        return this.isHidden;
    }
    
    public void setIsHidden(Boolean isHidden) {
        this.isHidden = isHidden;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="predictionUpload")
    public Set<PrivatePredictionEvaluation> getPrivatePredictionEvaluations() {
        return this.privatePredictionEvaluations;
    }
    
    public void setPrivatePredictionEvaluations(Set<PrivatePredictionEvaluation> privatePredictionEvaluations) {
        this.privatePredictionEvaluations = privatePredictionEvaluations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="predictionUpload")
    public Set<CompetitionParticipant> getCompetitionParticipants() {
        return this.competitionParticipants;
    }
    
    public void setCompetitionParticipants(Set<CompetitionParticipant> competitionParticipants) {
        this.competitionParticipants = competitionParticipants;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="predictionUpload")
    public Set<PrivatePrediction> getPrivatePredictions() {
        return this.privatePredictions;
    }
    
    public void setPrivatePredictions(Set<PrivatePrediction> privatePredictions) {
        this.privatePredictions = privatePredictions;
    }




}


