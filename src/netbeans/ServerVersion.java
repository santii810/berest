package generador.de.modelos;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ServerVersion generated by hbm2java
 */
@Entity
@Table(name="server_version"
    ,catalog="metaserver2"
)
public class ServerVersion  implements java.io.Serializable {


     private Integer id;
     private Server server;
     private String name;
     private Date created;
     private String description;
     private Set<PredictionEvaluation> predictionEvaluations = new HashSet<PredictionEvaluation>(0);
     private Set<DocumentTypeFalsePositive> documentTypeFalsePositives = new HashSet<DocumentTypeFalsePositive>(0);
     private Set<TypePredictionEvaluation> typePredictionEvaluations = new HashSet<TypePredictionEvaluation>(0);
     private Set<DocumentPredictionEvaluation> documentPredictionEvaluations = new HashSet<DocumentPredictionEvaluation>(0);
     private Set<CompetitionParticipant> competitionParticipants = new HashSet<CompetitionParticipant>(0);
     private Set<DocumentTypeFalseNegative> documentTypeFalseNegatives = new HashSet<DocumentTypeFalseNegative>(0);
     private Set<PredictionRequest> predictionRequests = new HashSet<PredictionRequest>(0);
     private Set<DocumentTypeTruePositive> documentTypeTruePositives = new HashSet<DocumentTypeTruePositive>(0);
     private Set<PrivatePredictionEvaluation> privatePredictionEvaluations = new HashSet<PrivatePredictionEvaluation>(0);
     private Set<PrivatePrediction> privatePredictions = new HashSet<PrivatePrediction>(0);
     private Set<Prediction> predictions = new HashSet<Prediction>(0);

    public ServerVersion() {
    }

	
    public ServerVersion(Server server, Date created) {
        this.server = server;
        this.created = created;
    }
    public ServerVersion(Server server, String name, Date created, String description, Set<PredictionEvaluation> predictionEvaluations, Set<DocumentTypeFalsePositive> documentTypeFalsePositives, Set<TypePredictionEvaluation> typePredictionEvaluations, Set<DocumentPredictionEvaluation> documentPredictionEvaluations, Set<CompetitionParticipant> competitionParticipants, Set<DocumentTypeFalseNegative> documentTypeFalseNegatives, Set<PredictionRequest> predictionRequests, Set<DocumentTypeTruePositive> documentTypeTruePositives, Set<PrivatePredictionEvaluation> privatePredictionEvaluations, Set<PrivatePrediction> privatePredictions, Set<Prediction> predictions) {
       this.server = server;
       this.name = name;
       this.created = created;
       this.description = description;
       this.predictionEvaluations = predictionEvaluations;
       this.documentTypeFalsePositives = documentTypeFalsePositives;
       this.typePredictionEvaluations = typePredictionEvaluations;
       this.documentPredictionEvaluations = documentPredictionEvaluations;
       this.competitionParticipants = competitionParticipants;
       this.documentTypeFalseNegatives = documentTypeFalseNegatives;
       this.predictionRequests = predictionRequests;
       this.documentTypeTruePositives = documentTypeTruePositives;
       this.privatePredictionEvaluations = privatePredictionEvaluations;
       this.privatePredictions = privatePredictions;
       this.predictions = predictions;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="server_id", nullable=false)
    public Server getServer() {
        return this.server;
    }
    
    public void setServer(Server server) {
        this.server = server;
    }

    
    @Column(name="name", length=500)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", nullable=false, length=19)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }

    
    @Column(name="description", length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serverVersion")
    public Set<PredictionEvaluation> getPredictionEvaluations() {
        return this.predictionEvaluations;
    }
    
    public void setPredictionEvaluations(Set<PredictionEvaluation> predictionEvaluations) {
        this.predictionEvaluations = predictionEvaluations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serverVersion")
    public Set<DocumentTypeFalsePositive> getDocumentTypeFalsePositives() {
        return this.documentTypeFalsePositives;
    }
    
    public void setDocumentTypeFalsePositives(Set<DocumentTypeFalsePositive> documentTypeFalsePositives) {
        this.documentTypeFalsePositives = documentTypeFalsePositives;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serverVersion")
    public Set<TypePredictionEvaluation> getTypePredictionEvaluations() {
        return this.typePredictionEvaluations;
    }
    
    public void setTypePredictionEvaluations(Set<TypePredictionEvaluation> typePredictionEvaluations) {
        this.typePredictionEvaluations = typePredictionEvaluations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serverVersion")
    public Set<DocumentPredictionEvaluation> getDocumentPredictionEvaluations() {
        return this.documentPredictionEvaluations;
    }
    
    public void setDocumentPredictionEvaluations(Set<DocumentPredictionEvaluation> documentPredictionEvaluations) {
        this.documentPredictionEvaluations = documentPredictionEvaluations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serverVersion")
    public Set<CompetitionParticipant> getCompetitionParticipants() {
        return this.competitionParticipants;
    }
    
    public void setCompetitionParticipants(Set<CompetitionParticipant> competitionParticipants) {
        this.competitionParticipants = competitionParticipants;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serverVersion")
    public Set<DocumentTypeFalseNegative> getDocumentTypeFalseNegatives() {
        return this.documentTypeFalseNegatives;
    }
    
    public void setDocumentTypeFalseNegatives(Set<DocumentTypeFalseNegative> documentTypeFalseNegatives) {
        this.documentTypeFalseNegatives = documentTypeFalseNegatives;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serverVersion")
    public Set<PredictionRequest> getPredictionRequests() {
        return this.predictionRequests;
    }
    
    public void setPredictionRequests(Set<PredictionRequest> predictionRequests) {
        this.predictionRequests = predictionRequests;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serverVersion")
    public Set<DocumentTypeTruePositive> getDocumentTypeTruePositives() {
        return this.documentTypeTruePositives;
    }
    
    public void setDocumentTypeTruePositives(Set<DocumentTypeTruePositive> documentTypeTruePositives) {
        this.documentTypeTruePositives = documentTypeTruePositives;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serverVersion")
    public Set<PrivatePredictionEvaluation> getPrivatePredictionEvaluations() {
        return this.privatePredictionEvaluations;
    }
    
    public void setPrivatePredictionEvaluations(Set<PrivatePredictionEvaluation> privatePredictionEvaluations) {
        this.privatePredictionEvaluations = privatePredictionEvaluations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serverVersion")
    public Set<PrivatePrediction> getPrivatePredictions() {
        return this.privatePredictions;
    }
    
    public void setPrivatePredictions(Set<PrivatePrediction> privatePredictions) {
        this.privatePredictions = privatePredictions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serverVersion")
    public Set<Prediction> getPredictions() {
        return this.predictions;
    }
    
    public void setPredictions(Set<Prediction> predictions) {
        this.predictions = predictions;
    }




}


