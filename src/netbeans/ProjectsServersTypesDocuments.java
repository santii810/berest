package generador.de.modelos;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * ProjectsServersTypesDocuments generated by hbm2java
 */
@Entity
@Table(name="projects_servers_types_documents"
    ,catalog="metaserver2"
    , uniqueConstraints = @UniqueConstraint(columnNames="external_id") 
)
public class ProjectsServersTypesDocuments  implements java.io.Serializable {


     private Integer id;
     private Document document;
     private Project project;
     private Server server;
     private Type type;
     private String externalId;
     private boolean retrived;

    public ProjectsServersTypesDocuments() {
    }

    public ProjectsServersTypesDocuments(Document document, Project project, Server server, Type type, String externalId, boolean retrived) {
       this.document = document;
       this.project = project;
       this.server = server;
       this.type = type;
       this.externalId = externalId;
       this.retrived = retrived;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="document_id", nullable=false)
    public Document getDocument() {
        return this.document;
    }
    
    public void setDocument(Document document) {
        this.document = document;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="project_id", nullable=false)
    public Project getProject() {
        return this.project;
    }
    
    public void setProject(Project project) {
        this.project = project;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="server_id", nullable=false)
    public Server getServer() {
        return this.server;
    }
    
    public void setServer(Server server) {
        this.server = server;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="type_id", nullable=false)
    public Type getType() {
        return this.type;
    }
    
    public void setType(Type type) {
        this.type = type;
    }

    
    @Column(name="external_id", unique=true, nullable=false, length=8)
    public String getExternalId() {
        return this.externalId;
    }
    
    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }

    
    @Column(name="retrived", nullable=false)
    public boolean isRetrived() {
        return this.retrived;
    }
    
    public void setRetrived(boolean retrived) {
        this.retrived = retrived;
    }




}


