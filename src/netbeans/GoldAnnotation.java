package generador.de.modelos;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * GoldAnnotation generated by hbm2java
 */
@Entity
@Table(name="gold_annotation"
    ,catalog="metaserver2"
    , uniqueConstraints = @UniqueConstraint(columnNames={"init", "end", "document_id", "section", "type_id", "gold_standard_upload_id"}) 
)
public class GoldAnnotation  implements java.io.Serializable {


     private Integer id;
     private Document document;
     private GoldStandardUpload goldStandardUpload;
     private Type type;
     private String annotatedText;
     private int init;
     private int end;
     private char section;
     private String databaseId;
     private Set<CoOcurrenceNetwork> coOcurrenceNetworksForTermBId = new HashSet<CoOcurrenceNetwork>(0);
     private Set<CoOcurrenceNetwork> coOcurrenceNetworksForTermAId = new HashSet<CoOcurrenceNetwork>(0);

    public GoldAnnotation() {
    }

	
    public GoldAnnotation(Document document, GoldStandardUpload goldStandardUpload, Type type, String annotatedText, int init, int end, char section) {
        this.document = document;
        this.goldStandardUpload = goldStandardUpload;
        this.type = type;
        this.annotatedText = annotatedText;
        this.init = init;
        this.end = end;
        this.section = section;
    }
    public GoldAnnotation(Document document, GoldStandardUpload goldStandardUpload, Type type, String annotatedText, int init, int end, char section, String databaseId, Set<CoOcurrenceNetwork> coOcurrenceNetworksForTermBId, Set<CoOcurrenceNetwork> coOcurrenceNetworksForTermAId) {
       this.document = document;
       this.goldStandardUpload = goldStandardUpload;
       this.type = type;
       this.annotatedText = annotatedText;
       this.init = init;
       this.end = end;
       this.section = section;
       this.databaseId = databaseId;
       this.coOcurrenceNetworksForTermBId = coOcurrenceNetworksForTermBId;
       this.coOcurrenceNetworksForTermAId = coOcurrenceNetworksForTermAId;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="document_id", nullable=false)
    public Document getDocument() {
        return this.document;
    }
    
    public void setDocument(Document document) {
        this.document = document;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="gold_standard_upload_id", nullable=false)
    public GoldStandardUpload getGoldStandardUpload() {
        return this.goldStandardUpload;
    }
    
    public void setGoldStandardUpload(GoldStandardUpload goldStandardUpload) {
        this.goldStandardUpload = goldStandardUpload;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="type_id", nullable=false)
    public Type getType() {
        return this.type;
    }
    
    public void setType(Type type) {
        this.type = type;
    }

    
    @Column(name="annotated_text", nullable=false, length=65535)
    public String getAnnotatedText() {
        return this.annotatedText;
    }
    
    public void setAnnotatedText(String annotatedText) {
        this.annotatedText = annotatedText;
    }

    
    @Column(name="init", nullable=false)
    public int getInit() {
        return this.init;
    }
    
    public void setInit(int init) {
        this.init = init;
    }

    
    @Column(name="end", nullable=false)
    public int getEnd() {
        return this.end;
    }
    
    public void setEnd(int end) {
        this.end = end;
    }

    
    @Column(name="section", nullable=false, length=1)
    public char getSection() {
        return this.section;
    }
    
    public void setSection(char section) {
        this.section = section;
    }

    
    @Column(name="database_id", length=65535)
    public String getDatabaseId() {
        return this.databaseId;
    }
    
    public void setDatabaseId(String databaseId) {
        this.databaseId = databaseId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="goldAnnotationByTermBId")
    public Set<CoOcurrenceNetwork> getCoOcurrenceNetworksForTermBId() {
        return this.coOcurrenceNetworksForTermBId;
    }
    
    public void setCoOcurrenceNetworksForTermBId(Set<CoOcurrenceNetwork> coOcurrenceNetworksForTermBId) {
        this.coOcurrenceNetworksForTermBId = coOcurrenceNetworksForTermBId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="goldAnnotationByTermAId")
    public Set<CoOcurrenceNetwork> getCoOcurrenceNetworksForTermAId() {
        return this.coOcurrenceNetworksForTermAId;
    }
    
    public void setCoOcurrenceNetworksForTermAId(Set<CoOcurrenceNetwork> coOcurrenceNetworksForTermAId) {
        this.coOcurrenceNetworksForTermAId = coOcurrenceNetworksForTermAId;
    }




}


