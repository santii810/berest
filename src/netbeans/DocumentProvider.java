package generador.de.modelos;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * DocumentProvider generated by hbm2java
 */
@Entity
@Table(name="document_provider"
    ,catalog="metaserver2"
)
public class DocumentProvider  implements java.io.Serializable {


     private Integer id;
     private String name;
     private String url;
     private Set<ScheduleRequest> scheduleRequests = new HashSet<ScheduleRequest>(0);
     private Set<Document> documents = new HashSet<Document>(0);

    public DocumentProvider() {
    }

	
    public DocumentProvider(String name) {
        this.name = name;
    }
    public DocumentProvider(String name, String url, Set<ScheduleRequest> scheduleRequests, Set<Document> documents) {
       this.name = name;
       this.url = url;
       this.scheduleRequests = scheduleRequests;
       this.documents = documents;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="name", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="url", length=65535)
    public String getUrl() {
        return this.url;
    }
    
    public void setUrl(String url) {
        this.url = url;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="schedule_request_document_provider", catalog="metaserver2", joinColumns = { 
        @JoinColumn(name="document_provider_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="schedule_request_id", nullable=false, updatable=false) })
    public Set<ScheduleRequest> getScheduleRequests() {
        return this.scheduleRequests;
    }
    
    public void setScheduleRequests(Set<ScheduleRequest> scheduleRequests) {
        this.scheduleRequests = scheduleRequests;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="documentProvider")
    public Set<Document> getDocuments() {
        return this.documents;
    }
    
    public void setDocuments(Set<Document> documents) {
        this.documents = documents;
    }




}


