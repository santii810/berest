package generador.de.modelos;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Competition generated by hbm2java
 */
@Entity
@Table(name="competition"
    ,catalog="metaserver2"
)
public class Competition  implements java.io.Serializable {


     private Integer id;
     private String name;
     private Integer taskId;
     private Date created;
     private Date startDate;
     private Date finishDate;
     private String description;
     private Set<GoldStandardUpload> goldStandardUploads = new HashSet<GoldStandardUpload>(0);
     private Set<CompetitionParticipant> competitionParticipants = new HashSet<CompetitionParticipant>(0);
     private Set<Document> documents = new HashSet<Document>(0);
     private Set<PredictionUpload> predictionUploads = new HashSet<PredictionUpload>(0);
     private Set<PrivatePredictionEvaluation> privatePredictionEvaluations = new HashSet<PrivatePredictionEvaluation>(0);
     private Set<PredictionEvaluation> predictionEvaluations = new HashSet<PredictionEvaluation>(0);
     private Set<Event> events = new HashSet<Event>(0);
     private Set<Type> types = new HashSet<Type>(0);
     private Set<CompetitionBenchmark> competitionBenchmarks = new HashSet<CompetitionBenchmark>(0);

    public Competition() {
    }

    public Competition(String name, Integer taskId, Date created, Date startDate, Date finishDate, String description, Set<GoldStandardUpload> goldStandardUploads, Set<CompetitionParticipant> competitionParticipants, Set<Document> documents, Set<PredictionUpload> predictionUploads, Set<PrivatePredictionEvaluation> privatePredictionEvaluations, Set<PredictionEvaluation> predictionEvaluations, Set<Event> events, Set<Type> types, Set<CompetitionBenchmark> competitionBenchmarks) {
       this.name = name;
       this.taskId = taskId;
       this.created = created;
       this.startDate = startDate;
       this.finishDate = finishDate;
       this.description = description;
       this.goldStandardUploads = goldStandardUploads;
       this.competitionParticipants = competitionParticipants;
       this.documents = documents;
       this.predictionUploads = predictionUploads;
       this.privatePredictionEvaluations = privatePredictionEvaluations;
       this.predictionEvaluations = predictionEvaluations;
       this.events = events;
       this.types = types;
       this.competitionBenchmarks = competitionBenchmarks;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="name", length=2000)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="task_id")
    public Integer getTaskId() {
        return this.taskId;
    }
    
    public void setTaskId(Integer taskId) {
        this.taskId = taskId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", length=19)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="start_date", length=19)
    public Date getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="finish_date", length=19)
    public Date getFinishDate() {
        return this.finishDate;
    }
    
    public void setFinishDate(Date finishDate) {
        this.finishDate = finishDate;
    }

    
    @Column(name="description", length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="competition")
    public Set<GoldStandardUpload> getGoldStandardUploads() {
        return this.goldStandardUploads;
    }
    
    public void setGoldStandardUploads(Set<GoldStandardUpload> goldStandardUploads) {
        this.goldStandardUploads = goldStandardUploads;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="competition")
    public Set<CompetitionParticipant> getCompetitionParticipants() {
        return this.competitionParticipants;
    }
    
    public void setCompetitionParticipants(Set<CompetitionParticipant> competitionParticipants) {
        this.competitionParticipants = competitionParticipants;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="competition_document", catalog="metaserver2", joinColumns = { 
        @JoinColumn(name="competition_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="document_id", nullable=false, updatable=false) })
    public Set<Document> getDocuments() {
        return this.documents;
    }
    
    public void setDocuments(Set<Document> documents) {
        this.documents = documents;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="competition")
    public Set<PredictionUpload> getPredictionUploads() {
        return this.predictionUploads;
    }
    
    public void setPredictionUploads(Set<PredictionUpload> predictionUploads) {
        this.predictionUploads = predictionUploads;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="competition")
    public Set<PrivatePredictionEvaluation> getPrivatePredictionEvaluations() {
        return this.privatePredictionEvaluations;
    }
    
    public void setPrivatePredictionEvaluations(Set<PrivatePredictionEvaluation> privatePredictionEvaluations) {
        this.privatePredictionEvaluations = privatePredictionEvaluations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="competition")
    public Set<PredictionEvaluation> getPredictionEvaluations() {
        return this.predictionEvaluations;
    }
    
    public void setPredictionEvaluations(Set<PredictionEvaluation> predictionEvaluations) {
        this.predictionEvaluations = predictionEvaluations;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="competition_event", catalog="metaserver2", joinColumns = { 
        @JoinColumn(name="competition_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="event_id", nullable=false, updatable=false) })
    public Set<Event> getEvents() {
        return this.events;
    }
    
    public void setEvents(Set<Event> events) {
        this.events = events;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="competition_type", catalog="metaserver2", joinColumns = { 
        @JoinColumn(name="competition_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="type_id", nullable=false, updatable=false) })
    public Set<Type> getTypes() {
        return this.types;
    }
    
    public void setTypes(Set<Type> types) {
        this.types = types;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="competition")
    public Set<CompetitionBenchmark> getCompetitionBenchmarks() {
        return this.competitionBenchmarks;
    }
    
    public void setCompetitionBenchmarks(Set<CompetitionBenchmark> competitionBenchmarks) {
        this.competitionBenchmarks = competitionBenchmarks;
    }




}


