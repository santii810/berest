package generador.de.modelos;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PrivatePredictionEvaluation generated by hbm2java
 */
@Entity
@Table(name="private_prediction_evaluation"
    ,catalog="metaserver2"
)
public class PrivatePredictionEvaluation  implements java.io.Serializable {


     private Integer id;
     private Competition competition;
     private GoldStandardUpload goldStandardUpload;
     private PredictionUpload predictionUpload;
     private Server server;
     private ServerVersion serverVersion;
     private Task task;
     private User user;
     private Date created;
     private Float evaluationSeconds;
     private Float macroFScore;
     private Float macroPrecision;
     private Float macroRecall;
     private Float microFScore;
     private Float microPrecision;
     private Float microRecall;
     private Integer truePositives;
     private Integer falsePositives;
     private Integer falseNegatives;
     private String truePositivesJson;
     private String falsePositivesJson;
     private String falseNegativesJson;
     private Boolean notifyByEmail;
     private Boolean isHidden;
     private Set<PrivateDocumentPredictionEvaluation> privateDocumentPredictionEvaluations = new HashSet<PrivateDocumentPredictionEvaluation>(0);
     private Set<PrivateTypePredictionEvaluation> privateTypePredictionEvaluations = new HashSet<PrivateTypePredictionEvaluation>(0);
     private Set<PredictionRequest> predictionRequests = new HashSet<PredictionRequest>(0);
     private Set<PrivateDocumentTypeFalseNegative> privateDocumentTypeFalseNegatives = new HashSet<PrivateDocumentTypeFalseNegative>(0);
     private Set<PrivateDocumentTypeTruePositive> privateDocumentTypeTruePositives = new HashSet<PrivateDocumentTypeTruePositive>(0);
     private Set<PrivateDocumentTypeFalsePositive> privateDocumentTypeFalsePositives = new HashSet<PrivateDocumentTypeFalsePositive>(0);

    public PrivatePredictionEvaluation() {
    }

	
    public PrivatePredictionEvaluation(Competition competition, GoldStandardUpload goldStandardUpload, Server server, ServerVersion serverVersion, User user) {
        this.competition = competition;
        this.goldStandardUpload = goldStandardUpload;
        this.server = server;
        this.serverVersion = serverVersion;
        this.user = user;
    }
    public PrivatePredictionEvaluation(Competition competition, GoldStandardUpload goldStandardUpload, PredictionUpload predictionUpload, Server server, ServerVersion serverVersion, Task task, User user, Date created, Float evaluationSeconds, Float macroFScore, Float macroPrecision, Float macroRecall, Float microFScore, Float microPrecision, Float microRecall, Integer truePositives, Integer falsePositives, Integer falseNegatives, String truePositivesJson, String falsePositivesJson, String falseNegativesJson, Boolean notifyByEmail, Boolean isHidden, Set<PrivateDocumentPredictionEvaluation> privateDocumentPredictionEvaluations, Set<PrivateTypePredictionEvaluation> privateTypePredictionEvaluations, Set<PredictionRequest> predictionRequests, Set<PrivateDocumentTypeFalseNegative> privateDocumentTypeFalseNegatives, Set<PrivateDocumentTypeTruePositive> privateDocumentTypeTruePositives, Set<PrivateDocumentTypeFalsePositive> privateDocumentTypeFalsePositives) {
       this.competition = competition;
       this.goldStandardUpload = goldStandardUpload;
       this.predictionUpload = predictionUpload;
       this.server = server;
       this.serverVersion = serverVersion;
       this.task = task;
       this.user = user;
       this.created = created;
       this.evaluationSeconds = evaluationSeconds;
       this.macroFScore = macroFScore;
       this.macroPrecision = macroPrecision;
       this.macroRecall = macroRecall;
       this.microFScore = microFScore;
       this.microPrecision = microPrecision;
       this.microRecall = microRecall;
       this.truePositives = truePositives;
       this.falsePositives = falsePositives;
       this.falseNegatives = falseNegatives;
       this.truePositivesJson = truePositivesJson;
       this.falsePositivesJson = falsePositivesJson;
       this.falseNegativesJson = falseNegativesJson;
       this.notifyByEmail = notifyByEmail;
       this.isHidden = isHidden;
       this.privateDocumentPredictionEvaluations = privateDocumentPredictionEvaluations;
       this.privateTypePredictionEvaluations = privateTypePredictionEvaluations;
       this.predictionRequests = predictionRequests;
       this.privateDocumentTypeFalseNegatives = privateDocumentTypeFalseNegatives;
       this.privateDocumentTypeTruePositives = privateDocumentTypeTruePositives;
       this.privateDocumentTypeFalsePositives = privateDocumentTypeFalsePositives;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="competition_id", nullable=false)
    public Competition getCompetition() {
        return this.competition;
    }
    
    public void setCompetition(Competition competition) {
        this.competition = competition;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="gold_standard_upload_id", nullable=false)
    public GoldStandardUpload getGoldStandardUpload() {
        return this.goldStandardUpload;
    }
    
    public void setGoldStandardUpload(GoldStandardUpload goldStandardUpload) {
        this.goldStandardUpload = goldStandardUpload;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="prediction_upload_id")
    public PredictionUpload getPredictionUpload() {
        return this.predictionUpload;
    }
    
    public void setPredictionUpload(PredictionUpload predictionUpload) {
        this.predictionUpload = predictionUpload;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="server_id", nullable=false)
    public Server getServer() {
        return this.server;
    }
    
    public void setServer(Server server) {
        this.server = server;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="server_version_id", nullable=false)
    public ServerVersion getServerVersion() {
        return this.serverVersion;
    }
    
    public void setServerVersion(ServerVersion serverVersion) {
        this.serverVersion = serverVersion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="task_id")
    public Task getTask() {
        return this.task;
    }
    
    public void setTask(Task task) {
        this.task = task;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", length=19)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }

    
    @Column(name="evaluation_seconds", precision=12, scale=0)
    public Float getEvaluationSeconds() {
        return this.evaluationSeconds;
    }
    
    public void setEvaluationSeconds(Float evaluationSeconds) {
        this.evaluationSeconds = evaluationSeconds;
    }

    
    @Column(name="macro_f_score", precision=12, scale=0)
    public Float getMacroFScore() {
        return this.macroFScore;
    }
    
    public void setMacroFScore(Float macroFScore) {
        this.macroFScore = macroFScore;
    }

    
    @Column(name="macro_precision", precision=12, scale=0)
    public Float getMacroPrecision() {
        return this.macroPrecision;
    }
    
    public void setMacroPrecision(Float macroPrecision) {
        this.macroPrecision = macroPrecision;
    }

    
    @Column(name="macro_recall", precision=12, scale=0)
    public Float getMacroRecall() {
        return this.macroRecall;
    }
    
    public void setMacroRecall(Float macroRecall) {
        this.macroRecall = macroRecall;
    }

    
    @Column(name="micro_f_score", precision=12, scale=0)
    public Float getMicroFScore() {
        return this.microFScore;
    }
    
    public void setMicroFScore(Float microFScore) {
        this.microFScore = microFScore;
    }

    
    @Column(name="micro_precision", precision=12, scale=0)
    public Float getMicroPrecision() {
        return this.microPrecision;
    }
    
    public void setMicroPrecision(Float microPrecision) {
        this.microPrecision = microPrecision;
    }

    
    @Column(name="micro_recall", precision=12, scale=0)
    public Float getMicroRecall() {
        return this.microRecall;
    }
    
    public void setMicroRecall(Float microRecall) {
        this.microRecall = microRecall;
    }

    
    @Column(name="true_positives")
    public Integer getTruePositives() {
        return this.truePositives;
    }
    
    public void setTruePositives(Integer truePositives) {
        this.truePositives = truePositives;
    }

    
    @Column(name="false_positives")
    public Integer getFalsePositives() {
        return this.falsePositives;
    }
    
    public void setFalsePositives(Integer falsePositives) {
        this.falsePositives = falsePositives;
    }

    
    @Column(name="false_negatives")
    public Integer getFalseNegatives() {
        return this.falseNegatives;
    }
    
    public void setFalseNegatives(Integer falseNegatives) {
        this.falseNegatives = falseNegatives;
    }

    
    @Column(name="true_positives_json")
    public String getTruePositivesJson() {
        return this.truePositivesJson;
    }
    
    public void setTruePositivesJson(String truePositivesJson) {
        this.truePositivesJson = truePositivesJson;
    }

    
    @Column(name="false_positives_json")
    public String getFalsePositivesJson() {
        return this.falsePositivesJson;
    }
    
    public void setFalsePositivesJson(String falsePositivesJson) {
        this.falsePositivesJson = falsePositivesJson;
    }

    
    @Column(name="false_negatives_json")
    public String getFalseNegativesJson() {
        return this.falseNegativesJson;
    }
    
    public void setFalseNegativesJson(String falseNegativesJson) {
        this.falseNegativesJson = falseNegativesJson;
    }

    
    @Column(name="notify_by_email")
    public Boolean getNotifyByEmail() {
        return this.notifyByEmail;
    }
    
    public void setNotifyByEmail(Boolean notifyByEmail) {
        this.notifyByEmail = notifyByEmail;
    }

    
    @Column(name="is_hidden")
    public Boolean getIsHidden() {
        return this.isHidden;
    }
    
    public void setIsHidden(Boolean isHidden) {
        this.isHidden = isHidden;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="privatePredictionEvaluation")
    public Set<PrivateDocumentPredictionEvaluation> getPrivateDocumentPredictionEvaluations() {
        return this.privateDocumentPredictionEvaluations;
    }
    
    public void setPrivateDocumentPredictionEvaluations(Set<PrivateDocumentPredictionEvaluation> privateDocumentPredictionEvaluations) {
        this.privateDocumentPredictionEvaluations = privateDocumentPredictionEvaluations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="privatePredictionEvaluation")
    public Set<PrivateTypePredictionEvaluation> getPrivateTypePredictionEvaluations() {
        return this.privateTypePredictionEvaluations;
    }
    
    public void setPrivateTypePredictionEvaluations(Set<PrivateTypePredictionEvaluation> privateTypePredictionEvaluations) {
        this.privateTypePredictionEvaluations = privateTypePredictionEvaluations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="privatePredictionEvaluation")
    public Set<PredictionRequest> getPredictionRequests() {
        return this.predictionRequests;
    }
    
    public void setPredictionRequests(Set<PredictionRequest> predictionRequests) {
        this.predictionRequests = predictionRequests;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="privatePredictionEvaluation")
    public Set<PrivateDocumentTypeFalseNegative> getPrivateDocumentTypeFalseNegatives() {
        return this.privateDocumentTypeFalseNegatives;
    }
    
    public void setPrivateDocumentTypeFalseNegatives(Set<PrivateDocumentTypeFalseNegative> privateDocumentTypeFalseNegatives) {
        this.privateDocumentTypeFalseNegatives = privateDocumentTypeFalseNegatives;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="privatePredictionEvaluation")
    public Set<PrivateDocumentTypeTruePositive> getPrivateDocumentTypeTruePositives() {
        return this.privateDocumentTypeTruePositives;
    }
    
    public void setPrivateDocumentTypeTruePositives(Set<PrivateDocumentTypeTruePositive> privateDocumentTypeTruePositives) {
        this.privateDocumentTypeTruePositives = privateDocumentTypeTruePositives;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="privatePredictionEvaluation")
    public Set<PrivateDocumentTypeFalsePositive> getPrivateDocumentTypeFalsePositives() {
        return this.privateDocumentTypeFalsePositives;
    }
    
    public void setPrivateDocumentTypeFalsePositives(Set<PrivateDocumentTypeFalsePositive> privateDocumentTypeFalsePositives) {
        this.privateDocumentTypeFalsePositives = privateDocumentTypeFalsePositives;
    }




}


