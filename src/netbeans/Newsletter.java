package generador.de.modelos;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Newsletter generated by hbm2java
 */
@Entity
@Table(name="newsletter"
    ,catalog="metaserver2"
)
public class Newsletter  implements java.io.Serializable {


     private Integer id;
     private int subscriptorInterest;
     private String title;
     private String body;
     private Date dataToSend;
     private byte isSended;
     private Date created;
     private Date modified;
     private Set<Subscriptor> subscriptors = new HashSet<Subscriptor>(0);

    public Newsletter() {
    }

	
    public Newsletter(int subscriptorInterest, String title, String body, byte isSended) {
        this.subscriptorInterest = subscriptorInterest;
        this.title = title;
        this.body = body;
        this.isSended = isSended;
    }
    public Newsletter(int subscriptorInterest, String title, String body, Date dataToSend, byte isSended, Date created, Date modified, Set<Subscriptor> subscriptors) {
       this.subscriptorInterest = subscriptorInterest;
       this.title = title;
       this.body = body;
       this.dataToSend = dataToSend;
       this.isSended = isSended;
       this.created = created;
       this.modified = modified;
       this.subscriptors = subscriptors;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="subscriptor_interest", nullable=false)
    public int getSubscriptorInterest() {
        return this.subscriptorInterest;
    }
    
    public void setSubscriptorInterest(int subscriptorInterest) {
        this.subscriptorInterest = subscriptorInterest;
    }

    
    @Column(name="title", nullable=false, length=65535)
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }

    
    @Column(name="body", nullable=false, length=65535)
    public String getBody() {
        return this.body;
    }
    
    public void setBody(String body) {
        this.body = body;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="data_to_send", length=19)
    public Date getDataToSend() {
        return this.dataToSend;
    }
    
    public void setDataToSend(Date dataToSend) {
        this.dataToSend = dataToSend;
    }

    
    @Column(name="is_sended", nullable=false)
    public byte getIsSended() {
        return this.isSended;
    }
    
    public void setIsSended(byte isSended) {
        this.isSended = isSended;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", length=19)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modified", length=19)
    public Date getModified() {
        return this.modified;
    }
    
    public void setModified(Date modified) {
        this.modified = modified;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="newsletter_subscriptor", catalog="metaserver2", joinColumns = { 
        @JoinColumn(name="newsletter_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="subscriptor_id", nullable=false, updatable=false) })
    public Set<Subscriptor> getSubscriptors() {
        return this.subscriptors;
    }
    
    public void setSubscriptors(Set<Subscriptor> subscriptors) {
        this.subscriptors = subscriptors;
    }




}


