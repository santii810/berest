package es.uvigo.esei.sgvilar.berest.entities;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import java.util.Date;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * ServerVersion generated by hbm2java
 */
@Entity
@Getter
@Setter
@Table(name = "server_version", catalog = "")
public class ServerVersionEntity implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    private Integer id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "server_id", nullable = false)
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler", "serverVersions"})
    private ServerEntity server;

    @Column(name = "name", length = 500)
    private String name;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created", nullable = false, length = 19)
    private Date created;
    @Column(name = "description", length = 65535)
    private String description;

//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "serverVersion")
//    private Set<PredictionEvaluation> predictionEvaluations = new HashSet<PredictionEvaluation>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "serverVersion")
//    private Set<DocumentTypeFalsePositive> documentTypeFalsePositives = new HashSet<DocumentTypeFalsePositive>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "serverVersion")
//    private Set<TypePredictionEvaluation> typePredictionEvaluations = new HashSet<TypePredictionEvaluation>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "serverVersion")
//    private Set<DocumentPredictionEvaluation> documentPredictionEvaluations = new HashSet<DocumentPredictionEvaluation>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "serverVersion")
//    private Set<CompetitionParticipant> competitionParticipants = new HashSet<CompetitionParticipant>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "serverVersion")
//    private Set<DocumentTypeFalseNegative> documentTypeFalseNegatives = new HashSet<DocumentTypeFalseNegative>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "serverVersion")
//    private Set<PredictionRequestEntity> predictionRequests = new HashSet<>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "serverVersion")
//    private Set<DocumentTypeTruePositive> documentTypeTruePositives = new HashSet<DocumentTypeTruePositive>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "serverVersion")
//    private Set<PrivatePredictionEvaluationEntity> privatePredictionEvaluationEntities = new HashSet<PrivatePredictionEvaluationEntity>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "serverVersion")
//    private Set<PrivatePredictionEntity> privatePredictionEntities = new HashSet<PrivatePredictionEntity>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "serverVersion")
//    private Set<PredictionEntity> predictionEntities = new HashSet<PredictionEntity>(0);


}


