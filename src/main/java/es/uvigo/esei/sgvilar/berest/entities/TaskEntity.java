package es.uvigo.esei.sgvilar.berest.entities;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import es.uvigo.esei.sgvilar.berest.Strings.BerestStrings;
import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import java.util.Date;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * TaskEntity generated by hbm2java
 */
@Entity
@Getter
@Setter
@Table(name = "task", catalog = BerestStrings.CATALOG_NAME)
public class TaskEntity implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)

    private Integer id;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "task_name_id", nullable = false)
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler", "tasks"})
    private TaskNameEntity taskName;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "task_state_id", nullable = false)
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler", "tasks"})
    private TaskStateEntity taskState;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created", length = 19)
    private Date created;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "modified", length = 19)
    private Date modified;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "finished", length = 19)
    private Date finished;
    @Column(name = "exception", length = 65535)
    private String exception;
    @Column(name = "description", length = 65535)
    private String description;
    @Column(name = "progress", precision = 12, scale = 0)
    private Float progress;
    @Column(name = "seconds_in_queue")
    private Integer secondsInQueue;
    @Column(name = "arguments", length = 65535)
    private String arguments;

//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "task")
//    private Set<CompetitionBenchmark> competitionBenchmarks = new HashSet<CompetitionBenchmark>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "task")
//    private Set<JobQueue> jobQueues = new HashSet<JobQueue>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "task")
//    private Set<PredictionRequest> predictionRequests = new HashSet<PredictionRequest>(0);
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "task")
//    private Set<PrivatePredictionEvaluation> privatePredictionEvaluations = new HashSet<PrivatePredictionEvaluation>(0);


}



