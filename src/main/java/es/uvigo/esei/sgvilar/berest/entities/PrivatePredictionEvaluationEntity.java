package es.uvigo.esei.sgvilar.berest.entities;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * PrivatePredictionEvaluationEntity generated by hbm2java
 */
@Entity
@Setter
@Getter
@Table(name = "private_prediction_evaluation", catalog = "")
public class PrivatePredictionEvaluationEntity implements java.io.Serializable {


    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    private Integer id;


    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created", length = 19)
    private Date created;
    @Column(name = "macro_f_score", precision = 12, scale = 0)
    private Float macroFScore;
    @Column(name = "macro_precision", precision = 12, scale = 0)
    private Float macroPrecision;
    @Column(name = "macro_recall", precision = 12, scale = 0)
    private Float macroRecall;
    @Column(name = "micro_f_score", precision = 12, scale = 0)
    private Float microFScore;
    @Column(name = "micro_precision", precision = 12, scale = 0)
    private Float microPrecision;
    @Column(name = "micro_recall", precision = 12, scale = 0)
    private Float microRecall;
    @Column(name = "true_positives")
    private Integer truePositives;
    @Column(name = "false_positives")
    private Integer falsePositives;
    @Column(name = "false_negatives")
    private Integer falseNegatives;
    @Column(name = "true_positives_json")
    private String truePositivesJson;
    @Column(name = "false_positives_json")
    private String falsePositivesJson;
    @Column(name = "false_negatives_json")
    private String falseNegativesJson;
    @Column(name = "notify_by_email")
    private Boolean notifyByEmail;
    @Column(name = "is_hidden")
    private Boolean isHidden;

//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "privatePredictionEvaluation")
//    private Set<PrivateDocumentPredictionEvaluation> privateDocumentPredictionEvaluations = new HashSet<PrivateDocumentPredictionEvaluation>(0);

//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "privatePredictionEvaluation")
//    private Set<PrivateTypePredictionEvaluation> privateTypePredictionEvaluations = new HashSet<PrivateTypePredictionEvaluation>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "privatePredictionEvaluation")
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler", "privatePredictionEvaluation"})
    private Set<PredictionRequestEntity> predictionRequests = new HashSet<>(0);

//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "privatePredictionEvaluation")
//    private Set<PrivateDocumentTypeFalseNegative> privateDocumentTypeFalseNegatives = new HashSet<PrivateDocumentTypeFalseNegative>(0);
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "privatePredictionEvaluation")
//    private Set<PrivateDocumentTypeTruePositive> privateDocumentTypeTruePositives = new HashSet<PrivateDocumentTypeTruePositive>(0);
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "privatePredictionEvaluation")
//    private Set<PrivateDocumentTypeFalsePositive> privateDocumentTypeFalsePositives = new HashSet<PrivateDocumentTypeFalsePositive>(0);

    //@ManyToOne(fetch=FetchType.LAZY)
//    @JoinColumn(name="competition_id", nullable=false)
//     private Competition competition;
//@ManyToOne(fetch=FetchType.LAZY)
//    @JoinColumn(name="gold_standard_upload_id", nullable=false)
//     private GoldStandardUpload goldStandardUpload;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "prediction_upload_id")
    private PredictionUploadEntity predictionUpload;


    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "server_id", nullable = false)
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler", "privatePredictionEvaluations"})
    private ServerEntity server;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "server_version_id", nullable = false)
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler", "privatePredictionEvaluations"})
    private ServerVersionEntity serverVersion;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "task_id")
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler", "privatePredictionEvaluations"})
    private TaskEntity task;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id", nullable = false)
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler", "privatePredictionEvaluations"})
    private UserEntity user;


}


