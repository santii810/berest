package es.uvigo.esei.sgvilar.berest.entities;
// Generated 12-mar-2019 17:18:59 by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonView;
import es.uvigo.esei.sgvilar.berest.Strings.BerestStrings;
import es.uvigo.esei.sgvilar.berest.config.JSONViews;
import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * TypeEntity generated by hbm2java
 */
@Entity
@Getter
@Setter
@Table(name = "type", catalog = BerestStrings.CATALOG_NAME)
public class TypeEntity implements java.io.Serializable {


    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    @JsonView(JSONViews.ServerAndServices.class)
    private Integer id;


    @Column(name = "name", unique = true, nullable = false)
    @JsonView(JSONViews.ServerAndServices.class)
    private String name;


    @Column(name = "description", length = 65535)
    @JsonView(JSONViews.ServerAndServices.class)
    private String description;
    @Column(name = "color", unique = true, length = 15)
    private String color;
    @Column(name = "is_validated")
    private Boolean isValidated;

    @Column(name = "is_server_annotable")
    private Boolean isServerAnnotable;

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "server_type", catalog = BerestStrings.CATALOG_NAME, joinColumns = {
            @JoinColumn(name = "type_id", nullable = false, updatable = false)}, inverseJoinColumns = {
            @JoinColumn(name = "server_id", nullable = false, updatable = false)})
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler", "types"})
    private Set<ServerEntity> servers = new HashSet<>(0);

    public Integer getId() {
        return this.id;
    }

    public String getName() {
        return this.name;
    }

    public String getDescription() {
        return this.description;
    }

//    private Set<PrivateTypePredictionEvaluation> privateTypePredictionEvaluations = new HashSet<PrivateTypePredictionEvaluation>(0);
//    private Set<GoldAnnotation> goldAnnotations = new HashSet<GoldAnnotation>(0);
//    private Set<DocumentTypeFalsePositive> documentTypeFalsePositives = new HashSet<DocumentTypeFalsePositive>(0);
//    private Set<TypePredictionEvaluation> typePredictionEvaluations = new HashSet<TypePredictionEvaluation>(0);
//    private Set<PrivateDocumentTypeFalsePositive> privateDocumentTypeFalsePositives = new HashSet<PrivateDocumentTypeFalsePositive>(0);
//    private Set<DocumentTypeFalseNegative> documentTypeFalseNegatives = new HashSet<DocumentTypeFalseNegative>(0);
//    private Set<PrivatePrediction> privatePredictions = new HashSet<PrivatePrediction>(0);
//    private Set<DocumentTypeTruePositive> documentTypeTruePositivesForPredictionTypeId = new HashSet<DocumentTypeTruePositive>(0);
//    private Set<Competition> competitions = new HashSet<Competition>(0);
//    private Set<ProjectConsensus> projectConsensuses = new HashSet<ProjectConsensus>(0);
//    private Set<Prediction> predictions = new HashSet<Prediction>(0);
//    private Set<PrivateDocumentTypeFalseNegative> privateDocumentTypeFalseNegatives = new HashSet<PrivateDocumentTypeFalseNegative>(0);
//    private Set<PrivateDocumentTypeTruePositive> privateDocumentTypeTruePositivesForGoldTypeId = new HashSet<PrivateDocumentTypeTruePositive>(0);
//    private Set<ProjectsServersTypesDocuments> projectsServersTypesDocumentses = new HashSet<ProjectsServersTypesDocuments>(0);
//    private Set<ScheduleRequest> scheduleRequests = new HashSet<ScheduleRequest>(0);
//    private Set<DocumentTypeTruePositive> documentTypeTruePositivesForGoldTypeId = new HashSet<DocumentTypeTruePositive>(0);
//    private Set<ServerNormalization> serverNormalizations = new HashSet<ServerNormalization>(0);
//    private Set<PrivateDocumentTypeTruePositive> privateDocumentTypeTruePositivesForPredictionTypeId = new HashSet<PrivateDocumentTypeTruePositive>(0);

//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
//    public Set<PrivateTypePredictionEvaluation> getPrivateTypePredictionEvaluations() {
//        return this.privateTypePredictionEvaluations;
//    }
//
//    public void setPrivateTypePredictionEvaluations(Set<PrivateTypePredictionEvaluation> privateTypePredictionEvaluations) {
//        this.privateTypePredictionEvaluations = privateTypePredictionEvaluations;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
//    public Set<GoldAnnotation> getGoldAnnotations() {
//        return this.goldAnnotations;
//    }
//
//    public void setGoldAnnotations(Set<GoldAnnotation> goldAnnotations) {
//        this.goldAnnotations = goldAnnotations;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
//    public Set<DocumentTypeFalsePositive> getDocumentTypeFalsePositives() {
//        return this.documentTypeFalsePositives;
//    }
//
//    public void setDocumentTypeFalsePositives(Set<DocumentTypeFalsePositive> documentTypeFalsePositives) {
//        this.documentTypeFalsePositives = documentTypeFalsePositives;
//    }
//

//    public Set<Server> getServers() {
//        return this.servers;
//    }
//
//    public void setServers(Set<Server> servers) {
//        this.servers = servers;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
//    public Set<TypePredictionEvaluation> getTypePredictionEvaluations() {
//        return this.typePredictionEvaluations;
//    }
//
//    public void setTypePredictionEvaluations(Set<TypePredictionEvaluation> typePredictionEvaluations) {
//        this.typePredictionEvaluations = typePredictionEvaluations;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
//    public Set<PrivateDocumentTypeFalsePositive> getPrivateDocumentTypeFalsePositives() {
//        return this.privateDocumentTypeFalsePositives;
//    }
//
//    public void setPrivateDocumentTypeFalsePositives(Set<PrivateDocumentTypeFalsePositive> privateDocumentTypeFalsePositives) {
//        this.privateDocumentTypeFalsePositives = privateDocumentTypeFalsePositives;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
//    public Set<DocumentTypeFalseNegative> getDocumentTypeFalseNegatives() {
//        return this.documentTypeFalseNegatives;
//    }
//
//    public void setDocumentTypeFalseNegatives(Set<DocumentTypeFalseNegative> documentTypeFalseNegatives) {
//        this.documentTypeFalseNegatives = documentTypeFalseNegatives;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
//    public Set<PrivatePrediction> getPrivatePredictions() {
//        return this.privatePredictions;
//    }
//
//    public void setPrivatePredictions(Set<PrivatePrediction> privatePredictions) {
//        this.privatePredictions = privatePredictions;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "typeByPredictionTypeId")
//    public Set<DocumentTypeTruePositive> getDocumentTypeTruePositivesForPredictionTypeId() {
//        return this.documentTypeTruePositivesForPredictionTypeId;
//    }
//
//    public void setDocumentTypeTruePositivesForPredictionTypeId(Set<DocumentTypeTruePositive> documentTypeTruePositivesForPredictionTypeId) {
//        this.documentTypeTruePositivesForPredictionTypeId = documentTypeTruePositivesForPredictionTypeId;
//    }
//
//    @ManyToMany(fetch = FetchType.LAZY)
//    @JoinTable(name = "competition_type", catalog = BerestStrings.CATALOG_NAME, joinColumns = {
//            @JoinColumn(name = "type_id", nullable = false, updatable = false)}, inverseJoinColumns = {
//            @JoinColumn(name = "competition_id", nullable = false, updatable = false)})
//    public Set<Competition> getCompetitions() {
//        return this.competitions;
//    }
//
//    public void setCompetitions(Set<Competition> competitions) {
//        this.competitions = competitions;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
//    public Set<ProjectConsensus> getProjectConsensuses() {
//        return this.projectConsensuses;
//    }
//
//    public void setProjectConsensuses(Set<ProjectConsensus> projectConsensuses) {
//        this.projectConsensuses = projectConsensuses;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
//    public Set<Prediction> getPredictions() {
//        return this.predictions;
//    }
//
//    public void setPredictions(Set<Prediction> predictions) {
//        this.predictions = predictions;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
//    public Set<PrivateDocumentTypeFalseNegative> getPrivateDocumentTypeFalseNegatives() {
//        return this.privateDocumentTypeFalseNegatives;
//    }
//
//    public void setPrivateDocumentTypeFalseNegatives(Set<PrivateDocumentTypeFalseNegative> privateDocumentTypeFalseNegatives) {
//        this.privateDocumentTypeFalseNegatives = privateDocumentTypeFalseNegatives;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "typeByGoldTypeId")
//    public Set<PrivateDocumentTypeTruePositive> getPrivateDocumentTypeTruePositivesForGoldTypeId() {
//        return this.privateDocumentTypeTruePositivesForGoldTypeId;
//    }
//
//    public void setPrivateDocumentTypeTruePositivesForGoldTypeId(Set<PrivateDocumentTypeTruePositive> privateDocumentTypeTruePositivesForGoldTypeId) {
//        this.privateDocumentTypeTruePositivesForGoldTypeId = privateDocumentTypeTruePositivesForGoldTypeId;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
//    public Set<ProjectsServersTypesDocuments> getProjectsServersTypesDocumentses() {
//        return this.projectsServersTypesDocumentses;
//    }
//
//    public void setProjectsServersTypesDocumentses(Set<ProjectsServersTypesDocuments> projectsServersTypesDocumentses) {
//        this.projectsServersTypesDocumentses = projectsServersTypesDocumentses;
//    }
//
//    @ManyToMany(fetch = FetchType.LAZY)
//    @JoinTable(name = "schedule_request_type", catalog = BerestStrings.CATALOG_NAME, joinColumns = {
//            @JoinColumn(name = "type_id", nullable = false, updatable = false)}, inverseJoinColumns = {
//            @JoinColumn(name = "schedule_request_id", nullable = false, updatable = false)})
//    public Set<ScheduleRequest> getScheduleRequests() {
//        return this.scheduleRequests;
//    }
//
//    public void setScheduleRequests(Set<ScheduleRequest> scheduleRequests) {
//        this.scheduleRequests = scheduleRequests;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "typeByGoldTypeId")
//    public Set<DocumentTypeTruePositive> getDocumentTypeTruePositivesForGoldTypeId() {
//        return this.documentTypeTruePositivesForGoldTypeId;
//    }
//
//    public void setDocumentTypeTruePositivesForGoldTypeId(Set<DocumentTypeTruePositive> documentTypeTruePositivesForGoldTypeId) {
//        this.documentTypeTruePositivesForGoldTypeId = documentTypeTruePositivesForGoldTypeId;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
//    public Set<ServerNormalization> getServerNormalizations() {
//        return this.serverNormalizations;
//    }
//
//    public void setServerNormalizations(Set<ServerNormalization> serverNormalizations) {
//        this.serverNormalizations = serverNormalizations;
//    }
//
//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "typeByPredictionTypeId")
//    public Set<PrivateDocumentTypeTruePositive> getPrivateDocumentTypeTruePositivesForPredictionTypeId() {
//        return this.privateDocumentTypeTruePositivesForPredictionTypeId;
//    }
//
//    public void setPrivateDocumentTypeTruePositivesForPredictionTypeId(Set<PrivateDocumentTypeTruePositive> privateDocumentTypeTruePositivesForPredictionTypeId) {
//        this.privateDocumentTypeTruePositivesForPredictionTypeId = privateDocumentTypeTruePositivesForPredictionTypeId;
//    }


}


